{
  "version": 3,
  "sources": ["../../react-lifecycles-compat/react-lifecycles-compat.es.js", "../../react-redux/src/index.ts", "../../react-redux/src/utils/react.ts", "../../react-redux/src/components/Context.ts", "../../react-redux/src/utils/useSyncExternalStore.ts", "../../react-redux/src/hooks/useReduxContext.ts", "../../react-redux/src/hooks/useSelector.ts", "../../react-redux/src/utils/react-is.ts", "../../react-redux/src/utils/warning.ts", "../../react-redux/src/connect/verifySubselectors.ts", "../../react-redux/src/connect/selectorFactory.ts", "../../react-redux/src/utils/bindActionCreators.ts", "../../react-redux/src/utils/isPlainObject.ts", "../../react-redux/src/utils/verifyPlainObject.ts", "../../react-redux/src/connect/wrapMapToProps.ts", "../../react-redux/src/connect/invalidArgFactory.ts", "../../react-redux/src/connect/mapDispatchToProps.ts", "../../react-redux/src/connect/mapStateToProps.ts", "../../react-redux/src/connect/mergeProps.ts", "../../react-redux/src/utils/batch.ts", "../../react-redux/src/utils/Subscription.ts", "../../react-redux/src/utils/useIsomorphicLayoutEffect.ts", "../../react-redux/src/utils/shallowEqual.ts", "../../react-redux/src/utils/hoistStatics.ts", "../../react-redux/src/components/connect.tsx", "../../react-redux/src/components/Provider.tsx", "../../react-redux/src/hooks/useStore.ts", "../../react-redux/src/hooks/useDispatch.ts", "../../react-redux/src/exports.ts", "../../react-redux/dist/cjs/index.js", "../../react-redux-loading-bar/build/loading_bar_ducks.js", "../../react-redux-loading-bar/build/loading_bar.js", "../../react-redux-loading-bar/build/loading_bar_middleware.js", "../../react-redux-loading-bar/build/immutable.js", "../../react-redux-loading-bar/build/index.js"],
  "sourcesContent": ["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n", "// The primary entry point assumes we are working with React 18, and thus have\r\n// useSyncExternalStore available. We can import that directly from React itself.\r\n// The useSyncExternalStoreWithSelector has to be imported, but we can use the\r\n// non-shim version. This shaves off the byte size of the shim.\r\n\r\nimport * as React from 'react'\r\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-selector.js'\r\n\r\nimport { initializeUseSelector } from './hooks/useSelector'\r\nimport { initializeConnect } from './components/connect'\r\n\r\ninitializeUseSelector(useSyncExternalStoreWithSelector)\r\ninitializeConnect(React.useSyncExternalStore)\r\n\r\nexport * from './exports'\r\n", "import * as ReactOriginal from 'react'\r\nimport type * as ReactNamespace from 'react'\r\n\r\nexport const React: typeof ReactNamespace =\r\n  // prettier-ignore\r\n  // @ts-ignore\r\n  'default' in ReactOriginal ? ReactOriginal['default'] : ReactOriginal as any\r\n", "import type { Context } from 'react'\nimport { React } from '../utils/react'\nimport type { Action, Store, UnknownAction } from 'redux'\nimport type { Subscription } from '../utils/Subscription'\nimport type { ProviderProps } from './Provider'\n\nexport interface ReactReduxContextValue<\n  SS = any,\n  A extends Action<string> = UnknownAction,\n> extends Pick<ProviderProps, 'stabilityCheck' | 'identityFunctionCheck'> {\n  store: Store<SS, A>\n  subscription: Subscription\n  getServerState?: () => SS\n}\n\nconst ContextKey = Symbol.for(`react-redux-context`)\nconst gT: {\n  [ContextKey]?: Map<\n    typeof React.createContext,\n    Context<ReactReduxContextValue | null>\n  >\n} = (\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : /* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */ {}\n) as any\n\nfunction getContext(): Context<ReactReduxContextValue | null> {\n  if (!React.createContext) return {} as any\n\n  const contextMap = (gT[ContextKey] ??= new Map<\n    typeof React.createContext,\n    Context<ReactReduxContextValue | null>\n  >())\n  let realContext = contextMap.get(React.createContext)\n  if (!realContext) {\n    realContext = React.createContext<ReactReduxContextValue | null>(\n      null as any,\n    )\n    if (process.env.NODE_ENV !== 'production') {\n      realContext.displayName = 'ReactRedux'\n    }\n    contextMap.set(React.createContext, realContext)\n  }\n  return realContext\n}\n\nexport const ReactReduxContext = /*#__PURE__*/ getContext()\n\nexport type ReactReduxContextInstance = typeof ReactReduxContext\n\nexport default ReactReduxContext\n", "import type { useSyncExternalStore } from 'use-sync-external-store'\r\nimport type { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-selector'\r\n\r\nexport const notInitialized = () => {\r\n  throw new Error('uSES not initialized!')\r\n}\r\n\r\nexport type uSES = typeof useSyncExternalStore\r\nexport type uSESWS = typeof useSyncExternalStoreWithSelector\r\n", "import { React } from '../utils/react'\nimport { ReactReduxContext } from '../components/Context'\nimport type { ReactReduxContextValue } from '../components/Context'\n\n/**\n * Hook factory, which creates a `useReduxContext` hook bound to a given context. This is a low-level\n * hook that you should usually not need to call directly.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useReduxContext` hook bound to the specified context.\n */\nexport function createReduxContextHook(context = ReactReduxContext) {\n  return function useReduxContext(): ReactReduxContextValue {\n    const contextValue = React.useContext(context)\n\n    if (process.env.NODE_ENV !== 'production' && !contextValue) {\n      throw new Error(\n        'could not find react-redux context value; please ensure the component is wrapped in a <Provider>',\n      )\n    }\n\n    return contextValue!\n  }\n}\n\n/**\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\n * hook that you should usually not need to call directly.\n *\n * @returns {any} the value of the `ReactReduxContext`\n *\n * @example\n *\n * import React from 'react'\n * import { useReduxContext } from 'react-redux'\n *\n * export const CounterComponent = () => {\n *   const { store } = useReduxContext()\n *   return <div>{store.getState()}</div>\n * }\n */\nexport const useReduxContext = /*#__PURE__*/ createReduxContextHook()\n", "//import * as React from 'react'\nimport { React } from '../utils/react'\n\nimport type { ReactReduxContextValue } from '../components/Context'\nimport { ReactReduxContext } from '../components/Context'\nimport type { EqualityFn, NoInfer } from '../types'\nimport type { uSESWS } from '../utils/useSyncExternalStore'\nimport { notInitialized } from '../utils/useSyncExternalStore'\nimport {\n  createReduxContextHook,\n  useReduxContext as useDefaultReduxContext,\n} from './useReduxContext'\n\n/**\n * The frequency of development mode checks.\n *\n * @since 8.1.0\n * @internal\n */\nexport type DevModeCheckFrequency = 'never' | 'once' | 'always'\n\n/**\n * Represents the configuration for development mode checks.\n *\n * @since 9.0.0\n * @internal\n */\nexport interface DevModeChecks {\n  /**\n   * Overrides the global stability check for the selector.\n   * - `once` - Run only the first time the selector is called.\n   * - `always` - Run every time the selector is called.\n   * - `never` - Never run the stability check.\n   *\n   * @default 'once'\n   *\n   * @since 8.1.0\n   */\n  stabilityCheck: DevModeCheckFrequency\n\n  /**\n   * Overrides the global identity function check for the selector.\n   * - `once` - Run only the first time the selector is called.\n   * - `always` - Run every time the selector is called.\n   * - `never` - Never run the identity function check.\n   *\n   * **Note**: Previously referred to as `noopCheck`.\n   *\n   * @default 'once'\n   *\n   * @since 9.0.0\n   */\n  identityFunctionCheck: DevModeCheckFrequency\n}\n\nexport interface UseSelectorOptions<Selected = unknown> {\n  equalityFn?: EqualityFn<Selected>\n\n  /**\n   * `useSelector` performs additional checks in development mode to help\n   * identify and warn about potential issues in selector behavior. This\n   * option allows you to customize the behavior of these checks per selector.\n   *\n   * @since 9.0.0\n   */\n  devModeChecks?: Partial<DevModeChecks>\n}\n\n/**\n * Represents a custom hook that allows you to extract data from the\n * Redux store state, using a selector function. The selector function\n * takes the current state as an argument and returns a part of the state\n * or some derived data. The hook also supports an optional equality\n * function or options object to customize its behavior.\n *\n * @template StateType - The specific type of state this hook operates on.\n *\n * @public\n */\nexport interface UseSelector<StateType = unknown> {\n  /**\n   * A function that takes a selector function as its first argument.\n   * The selector function is responsible for selecting a part of\n   * the Redux store's state or computing derived data.\n   *\n   * @param selector - A function that receives the current state and returns a part of the state or some derived data.\n   * @param equalityFnOrOptions - An optional equality function or options object for customizing the behavior of the selector.\n   * @returns The selected part of the state or derived data.\n   *\n   * @template TState - The specific type of state this hook operates on.\n   * @template Selected - The type of the value that the selector function will return.\n   */\n  <TState extends StateType = StateType, Selected = unknown>(\n    selector: (state: TState) => Selected,\n    equalityFnOrOptions?: EqualityFn<Selected> | UseSelectorOptions<Selected>,\n  ): Selected\n\n  /**\n   * Creates a \"pre-typed\" version of {@linkcode useSelector useSelector}\n   * where the `state` type is predefined.\n   *\n   * This allows you to set the `state` type once, eliminating the need to\n   * specify it with every {@linkcode useSelector useSelector} call.\n   *\n   * @returns A pre-typed `useSelector` with the state type already defined.\n   *\n   * @example\n   * ```ts\n   * export const useAppSelector = useSelector.withTypes<RootState>()\n   * ```\n   *\n   * @template OverrideStateType - The specific type of state this hook operates on.\n   *\n   * @since 9.1.0\n   */\n  withTypes: <\n    OverrideStateType extends StateType,\n  >() => UseSelector<OverrideStateType>\n}\n\nlet useSyncExternalStoreWithSelector = notInitialized as uSESWS\nexport const initializeUseSelector = (fn: uSESWS) => {\n  useSyncExternalStoreWithSelector = fn\n}\n\nconst refEquality: EqualityFn<any> = (a, b) => a === b\n\n/**\n * Hook factory, which creates a `useSelector` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useSelector` hook bound to the specified context.\n */\nexport function createSelectorHook(\n  context: React.Context<ReactReduxContextValue<\n    any,\n    any\n  > | null> = ReactReduxContext,\n): UseSelector {\n  const useReduxContext =\n    context === ReactReduxContext\n      ? useDefaultReduxContext\n      : createReduxContextHook(context)\n\n  const useSelector = <TState, Selected extends unknown>(\n    selector: (state: TState) => Selected,\n    equalityFnOrOptions:\n      | EqualityFn<NoInfer<Selected>>\n      | UseSelectorOptions<NoInfer<Selected>> = {},\n  ): Selected => {\n    const { equalityFn = refEquality, devModeChecks = {} } =\n      typeof equalityFnOrOptions === 'function'\n        ? { equalityFn: equalityFnOrOptions }\n        : equalityFnOrOptions\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(`You must pass a selector to useSelector`)\n      }\n      if (typeof selector !== 'function') {\n        throw new Error(`You must pass a function as a selector to useSelector`)\n      }\n      if (typeof equalityFn !== 'function') {\n        throw new Error(\n          `You must pass a function as an equality function to useSelector`,\n        )\n      }\n    }\n\n    const {\n      store,\n      subscription,\n      getServerState,\n      stabilityCheck,\n      identityFunctionCheck,\n    } = useReduxContext()\n\n    const firstRun = React.useRef(true)\n\n    const wrappedSelector = React.useCallback<typeof selector>(\n      {\n        [selector.name](state: TState) {\n          const selected = selector(state)\n          if (process.env.NODE_ENV !== 'production') {\n            const {\n              identityFunctionCheck: finalIdentityFunctionCheck,\n              stabilityCheck: finalStabilityCheck,\n            } = {\n              stabilityCheck,\n              identityFunctionCheck,\n              ...devModeChecks,\n            }\n            if (\n              finalStabilityCheck === 'always' ||\n              (finalStabilityCheck === 'once' && firstRun.current)\n            ) {\n              const toCompare = selector(state)\n              if (!equalityFn(selected, toCompare)) {\n                let stack: string | undefined = undefined\n                try {\n                  throw new Error()\n                } catch (e) {\n                  // eslint-disable-next-line no-extra-semi\n                  ;({ stack } = e as Error)\n                }\n                console.warn(\n                  'Selector ' +\n                    (selector.name || 'unknown') +\n                    ' returned a different result when called with the same parameters. This can lead to unnecessary rerenders.' +\n                    '\\nSelectors that return a new reference (such as an object or an array) should be memoized: https://redux.js.org/usage/deriving-data-selectors#optimizing-selectors-with-memoization',\n                  {\n                    state,\n                    selected,\n                    selected2: toCompare,\n                    stack,\n                  },\n                )\n              }\n            }\n            if (\n              finalIdentityFunctionCheck === 'always' ||\n              (finalIdentityFunctionCheck === 'once' && firstRun.current)\n            ) {\n              // @ts-ignore\n              if (selected === state) {\n                let stack: string | undefined = undefined\n                try {\n                  throw new Error()\n                } catch (e) {\n                  // eslint-disable-next-line no-extra-semi\n                  ;({ stack } = e as Error)\n                }\n                console.warn(\n                  'Selector ' +\n                    (selector.name || 'unknown') +\n                    ' returned the root state when called. This can lead to unnecessary rerenders.' +\n                    '\\nSelectors that return the entire state are almost certainly a mistake, as they will cause a rerender whenever *anything* in state changes.',\n                  { stack },\n                )\n              }\n            }\n            if (firstRun.current) firstRun.current = false\n          }\n          return selected\n        },\n      }[selector.name],\n      [selector, stabilityCheck, devModeChecks.stabilityCheck],\n    )\n\n    const selectedState = useSyncExternalStoreWithSelector(\n      subscription.addNestedSub,\n      store.getState,\n      getServerState || store.getState,\n      wrappedSelector,\n      equalityFn,\n    )\n\n    React.useDebugValue(selectedState)\n\n    return selectedState\n  }\n\n  Object.assign(useSelector, {\n    withTypes: () => useSelector,\n  })\n\n  return useSelector as UseSelector\n}\n\n/**\n * A hook to access the redux store's state. This hook takes a selector function\n * as an argument. The selector is called with the store state.\n *\n * This hook takes an optional equality comparison function as the second parameter\n * that allows you to customize the way the selected state is compared to determine\n * whether the component needs to be re-rendered.\n *\n * @param {Function} selector the selector function\n * @param {Function=} equalityFn the function that will be used to determine equality\n *\n * @returns {any} the selected state\n *\n * @example\n *\n * import React from 'react'\n * import { useSelector } from 'react-redux'\n *\n * export const CounterComponent = () => {\n *   const counter = useSelector(state => state.counter)\n *   return <div>{counter}</div>\n * }\n */\nexport const useSelector = /*#__PURE__*/ createSelectorHook()\n", "import type { ElementType, MemoExoticComponent, ReactElement } from 'react'\r\n\r\n// Directly ported from:\r\n// https://unpkg.com/browse/react-is@18.3.0-canary-ee68446ff-20231115/cjs/react-is.production.js\r\n// It's very possible this could change in the future, but given that\r\n// we only use these in `connect`, this is a low priority.\r\n\r\nconst REACT_ELEMENT_TYPE = Symbol.for('react.element')\r\nconst REACT_PORTAL_TYPE = Symbol.for('react.portal')\r\nconst REACT_FRAGMENT_TYPE = Symbol.for('react.fragment')\r\nconst REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode')\r\nconst REACT_PROFILER_TYPE = Symbol.for('react.profiler')\r\nconst REACT_PROVIDER_TYPE = Symbol.for('react.provider')\r\nconst REACT_CONTEXT_TYPE = Symbol.for('react.context')\r\nconst REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context')\r\nconst REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref')\r\nconst REACT_SUSPENSE_TYPE = Symbol.for('react.suspense')\r\nconst REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list')\r\nconst REACT_MEMO_TYPE = Symbol.for('react.memo')\r\nconst REACT_LAZY_TYPE = Symbol.for('react.lazy')\r\nconst REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen')\r\nconst REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference')\r\n\r\nexport const ForwardRef = REACT_FORWARD_REF_TYPE\r\nexport const Memo = REACT_MEMO_TYPE\r\n\r\nexport function isValidElementType(type: any): type is ElementType {\r\n  if (typeof type === 'string' || typeof type === 'function') {\r\n    return true\r\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\r\n\r\n  if (\r\n    type === REACT_FRAGMENT_TYPE ||\r\n    type === REACT_PROFILER_TYPE ||\r\n    type === REACT_STRICT_MODE_TYPE ||\r\n    type === REACT_SUSPENSE_TYPE ||\r\n    type === REACT_SUSPENSE_LIST_TYPE ||\r\n    type === REACT_OFFSCREEN_TYPE\r\n  ) {\r\n    return true\r\n  }\r\n\r\n  if (typeof type === 'object' && type !== null) {\r\n    if (\r\n      type.$$typeof === REACT_LAZY_TYPE ||\r\n      type.$$typeof === REACT_MEMO_TYPE ||\r\n      type.$$typeof === REACT_PROVIDER_TYPE ||\r\n      type.$$typeof === REACT_CONTEXT_TYPE ||\r\n      type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\r\n      // types supported by any Flight configuration anywhere since\r\n      // we don't know which Flight build this will end up being used\r\n      // with.\r\n      type.$$typeof === REACT_CLIENT_REFERENCE ||\r\n      type.getModuleId !== undefined\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction typeOf(object: any): symbol | undefined {\r\n  if (typeof object === 'object' && object !== null) {\r\n    const $$typeof = object.$$typeof\r\n\r\n    switch ($$typeof) {\r\n      case REACT_ELEMENT_TYPE: {\r\n        const type = object.type\r\n\r\n        switch (type) {\r\n          case REACT_FRAGMENT_TYPE:\r\n          case REACT_PROFILER_TYPE:\r\n          case REACT_STRICT_MODE_TYPE:\r\n          case REACT_SUSPENSE_TYPE:\r\n          case REACT_SUSPENSE_LIST_TYPE:\r\n            return type\r\n\r\n          default: {\r\n            const $$typeofType = type && type.$$typeof\r\n\r\n            switch ($$typeofType) {\r\n              case REACT_SERVER_CONTEXT_TYPE:\r\n              case REACT_CONTEXT_TYPE:\r\n              case REACT_FORWARD_REF_TYPE:\r\n              case REACT_LAZY_TYPE:\r\n              case REACT_MEMO_TYPE:\r\n              case REACT_PROVIDER_TYPE:\r\n                return $$typeofType\r\n\r\n              default:\r\n                return $$typeof\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      case REACT_PORTAL_TYPE: {\r\n        return $$typeof\r\n      }\r\n    }\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nexport function isContextConsumer(object: any): object is ReactElement {\r\n  return typeOf(object) === REACT_CONTEXT_TYPE\r\n}\r\n\r\nexport function isMemo(object: any): object is MemoExoticComponent<any> {\r\n  return typeOf(object) === REACT_MEMO_TYPE\r\n}\r\n", "/**\r\n * Prints a warning in the console if it exists.\r\n *\r\n * @param {String} message The warning message.\r\n * @returns {void}\r\n */\r\nexport default function warning(message: string) {\r\n  /* eslint-disable no-console */\r\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\r\n    console.error(message)\r\n  }\r\n  /* eslint-enable no-console */\r\n  try {\r\n    // This error was thrown as a convenience so that if you enable\r\n    // \"break on all exceptions\" in your console,\r\n    // it would pause the execution at this line.\r\n    throw new Error(message)\r\n    /* eslint-disable no-empty */\r\n  } catch (e) {}\r\n  /* eslint-enable no-empty */\r\n}\r\n", "import warning from '../utils/warning'\n\nfunction verify(selector: unknown, methodName: string): void {\n  if (!selector) {\n    throw new Error(`Unexpected value for ${methodName} in connect.`)\n  } else if (\n    methodName === 'mapStateToProps' ||\n    methodName === 'mapDispatchToProps'\n  ) {\n    if (!Object.prototype.hasOwnProperty.call(selector, 'dependsOnOwnProps')) {\n      warning(\n        `The selector for ${methodName} of connect did not specify a value for dependsOnOwnProps.`,\n      )\n    }\n  }\n}\n\nexport default function verifySubselectors(\n  mapStateToProps: unknown,\n  mapDispatchToProps: unknown,\n  mergeProps: unknown,\n): void {\n  verify(mapStateToProps, 'mapStateToProps')\n  verify(mapDispatchToProps, 'mapDispatchToProps')\n  verify(mergeProps, 'mergeProps')\n}\n", "import type { Dispatch, Action } from 'redux'\nimport type { ComponentType } from 'react'\nimport verifySubselectors from './verifySubselectors'\nimport type { EqualityFn, ExtendedEqualityFn } from '../types'\n\nexport type SelectorFactory<S, TProps, TOwnProps, TFactoryOptions> = (\n  dispatch: Dispatch<Action<string>>,\n  factoryOptions: TFactoryOptions,\n) => Selector<S, TProps, TOwnProps>\n\nexport type Selector<S, TProps, TOwnProps = null> = TOwnProps extends\n  | null\n  | undefined\n  ? (state: S) => TProps\n  : (state: S, ownProps: TOwnProps) => TProps\n\nexport type MapStateToProps<TStateProps, TOwnProps, State> = (\n  state: State,\n  ownProps: TOwnProps,\n) => TStateProps\n\nexport type MapStateToPropsFactory<TStateProps, TOwnProps, State> = (\n  initialState: State,\n  ownProps: TOwnProps,\n) => MapStateToProps<TStateProps, TOwnProps, State>\n\nexport type MapStateToPropsParam<TStateProps, TOwnProps, State> =\n  | MapStateToPropsFactory<TStateProps, TOwnProps, State>\n  | MapStateToProps<TStateProps, TOwnProps, State>\n  | null\n  | undefined\n\nexport type MapDispatchToPropsFunction<TDispatchProps, TOwnProps> = (\n  dispatch: Dispatch<Action<string>>,\n  ownProps: TOwnProps,\n) => TDispatchProps\n\nexport type MapDispatchToProps<TDispatchProps, TOwnProps> =\n  | MapDispatchToPropsFunction<TDispatchProps, TOwnProps>\n  | TDispatchProps\n\nexport type MapDispatchToPropsFactory<TDispatchProps, TOwnProps> = (\n  dispatch: Dispatch<Action<string>>,\n  ownProps: TOwnProps,\n) => MapDispatchToPropsFunction<TDispatchProps, TOwnProps>\n\nexport type MapDispatchToPropsParam<TDispatchProps, TOwnProps> =\n  | MapDispatchToPropsFactory<TDispatchProps, TOwnProps>\n  | MapDispatchToProps<TDispatchProps, TOwnProps>\n\nexport type MapDispatchToPropsNonObject<TDispatchProps, TOwnProps> =\n  | MapDispatchToPropsFactory<TDispatchProps, TOwnProps>\n  | MapDispatchToPropsFunction<TDispatchProps, TOwnProps>\n\nexport type MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps> = (\n  stateProps: TStateProps,\n  dispatchProps: TDispatchProps,\n  ownProps: TOwnProps,\n) => TMergedProps\n\ninterface PureSelectorFactoryComparisonOptions<TStateProps, TOwnProps, State> {\n  readonly areStatesEqual: ExtendedEqualityFn<State, TOwnProps>\n  readonly areStatePropsEqual: EqualityFn<TStateProps>\n  readonly areOwnPropsEqual: EqualityFn<TOwnProps>\n}\n\nexport function pureFinalPropsSelectorFactory<\n  TStateProps,\n  TOwnProps,\n  TDispatchProps,\n  TMergedProps,\n  State,\n>(\n  mapStateToProps: WrappedMapStateToProps<TStateProps, TOwnProps, State>,\n  mapDispatchToProps: WrappedMapDispatchToProps<TDispatchProps, TOwnProps>,\n  mergeProps: MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps>,\n  dispatch: Dispatch<Action<string>>,\n  {\n    areStatesEqual,\n    areOwnPropsEqual,\n    areStatePropsEqual,\n  }: PureSelectorFactoryComparisonOptions<TStateProps, TOwnProps, State>,\n) {\n  let hasRunAtLeastOnce = false\n  let state: State\n  let ownProps: TOwnProps\n  let stateProps: TStateProps\n  let dispatchProps: TDispatchProps\n  let mergedProps: TMergedProps\n\n  function handleFirstCall(firstState: State, firstOwnProps: TOwnProps) {\n    state = firstState\n    ownProps = firstOwnProps\n    stateProps = mapStateToProps(state, ownProps)\n    dispatchProps = mapDispatchToProps(dispatch, ownProps)\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n    hasRunAtLeastOnce = true\n    return mergedProps\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps)\n\n    if (mapDispatchToProps.dependsOnOwnProps)\n      dispatchProps = mapDispatchToProps(dispatch, ownProps)\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n    return mergedProps\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps)\n      stateProps = mapStateToProps(state, ownProps)\n\n    if (mapDispatchToProps.dependsOnOwnProps)\n      dispatchProps = mapDispatchToProps(dispatch, ownProps)\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n    return mergedProps\n  }\n\n  function handleNewState() {\n    const nextStateProps = mapStateToProps(state, ownProps)\n    const statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps)\n    stateProps = nextStateProps\n\n    if (statePropsChanged)\n      mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n\n    return mergedProps\n  }\n\n  function handleSubsequentCalls(nextState: State, nextOwnProps: TOwnProps) {\n    const propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps)\n    const stateChanged = !areStatesEqual(\n      nextState,\n      state,\n      nextOwnProps,\n      ownProps,\n    )\n    state = nextState\n    ownProps = nextOwnProps\n\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState()\n    if (propsChanged) return handleNewProps()\n    if (stateChanged) return handleNewState()\n    return mergedProps\n  }\n\n  return function pureFinalPropsSelector(\n    nextState: State,\n    nextOwnProps: TOwnProps,\n  ) {\n    return hasRunAtLeastOnce\n      ? handleSubsequentCalls(nextState, nextOwnProps)\n      : handleFirstCall(nextState, nextOwnProps)\n  }\n}\n\ninterface WrappedMapStateToProps<TStateProps, TOwnProps, State> {\n  (state: State, ownProps: TOwnProps): TStateProps\n  readonly dependsOnOwnProps: boolean\n}\n\ninterface WrappedMapDispatchToProps<TDispatchProps, TOwnProps> {\n  (dispatch: Dispatch<Action<string>>, ownProps: TOwnProps): TDispatchProps\n  readonly dependsOnOwnProps: boolean\n}\n\nexport interface InitOptions<TStateProps, TOwnProps, TMergedProps, State>\n  extends PureSelectorFactoryComparisonOptions<TStateProps, TOwnProps, State> {\n  readonly shouldHandleStateChanges: boolean\n  readonly displayName: string\n  readonly wrappedComponentName: string\n  readonly WrappedComponent: ComponentType<TOwnProps>\n  readonly areMergedPropsEqual: EqualityFn<TMergedProps>\n}\n\nexport interface SelectorFactoryOptions<\n  TStateProps,\n  TOwnProps,\n  TDispatchProps,\n  TMergedProps,\n  State,\n> extends InitOptions<TStateProps, TOwnProps, TMergedProps, State> {\n  readonly initMapStateToProps: (\n    dispatch: Dispatch<Action<string>>,\n    options: InitOptions<TStateProps, TOwnProps, TMergedProps, State>,\n  ) => WrappedMapStateToProps<TStateProps, TOwnProps, State>\n  readonly initMapDispatchToProps: (\n    dispatch: Dispatch<Action<string>>,\n    options: InitOptions<TStateProps, TOwnProps, TMergedProps, State>,\n  ) => WrappedMapDispatchToProps<TDispatchProps, TOwnProps>\n  readonly initMergeProps: (\n    dispatch: Dispatch<Action<string>>,\n    options: InitOptions<TStateProps, TOwnProps, TMergedProps, State>,\n  ) => MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps>\n}\n\n// TODO: Add more comments\n\n// The selector returned by selectorFactory will memoize its results,\n// allowing connect's shouldComponentUpdate to return false if final\n// props have not changed.\n\nexport default function finalPropsSelectorFactory<\n  TStateProps,\n  TOwnProps,\n  TDispatchProps,\n  TMergedProps,\n  State,\n>(\n  dispatch: Dispatch<Action<string>>,\n  {\n    initMapStateToProps,\n    initMapDispatchToProps,\n    initMergeProps,\n    ...options\n  }: SelectorFactoryOptions<\n    TStateProps,\n    TOwnProps,\n    TDispatchProps,\n    TMergedProps,\n    State\n  >,\n) {\n  const mapStateToProps = initMapStateToProps(dispatch, options)\n  const mapDispatchToProps = initMapDispatchToProps(dispatch, options)\n  const mergeProps = initMergeProps(dispatch, options)\n\n  if (process.env.NODE_ENV !== 'production') {\n    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps)\n  }\n\n  return pureFinalPropsSelectorFactory<\n    TStateProps,\n    TOwnProps,\n    TDispatchProps,\n    TMergedProps,\n    State\n  >(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options)\n}\n", "import type { ActionCreatorsMapObject, Dispatch } from 'redux'\n\nexport default function bindActionCreators(\n  actionCreators: ActionCreatorsMapObject,\n  dispatch: Dispatch,\n): ActionCreatorsMapObject {\n  const boundActionCreators: ActionCreatorsMapObject = {}\n\n  for (const key in actionCreators) {\n    const actionCreator = actionCreators[key]\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = (...args) => dispatch(actionCreator(...args))\n    }\n  }\n  return boundActionCreators\n}\n", "/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nexport default function isPlainObject(obj: unknown) {\n  if (typeof obj !== 'object' || obj === null) return false\n\n  const proto = Object.getPrototypeOf(obj)\n  if (proto === null) return true\n\n  let baseProto = proto\n  while (Object.getPrototypeOf(baseProto) !== null) {\n    baseProto = Object.getPrototypeOf(baseProto)\n  }\n\n  return proto === baseProto\n}\n", "import isPlainObject from './isPlainObject'\nimport warning from './warning'\n\nexport default function verifyPlainObject(\n  value: unknown,\n  displayName: string,\n  methodName: string,\n) {\n  if (!isPlainObject(value)) {\n    warning(\n      `${methodName}() in ${displayName} must return a plain object. Instead received ${value}.`,\n    )\n  }\n}\n", "import type { ActionCreatorsMapObject, Dispatch, ActionCreator } from 'redux'\n\nimport type { FixTypeLater } from '../types'\nimport verifyPlainObject from '../utils/verifyPlainObject'\n\ntype AnyState = { [key: string]: any }\ntype StateOrDispatch<S extends AnyState = AnyState> = S | Dispatch\n\ntype AnyProps = { [key: string]: any }\n\nexport type MapToProps<P extends AnyProps = AnyProps> = {\n  // eslint-disable-next-line no-unused-vars\n  (stateOrDispatch: StateOrDispatch, ownProps?: P): FixTypeLater\n  dependsOnOwnProps?: boolean\n}\n\nexport function wrapMapToPropsConstant(\n  // * Note:\n  //  It seems that the dispatch argument\n  //  could be a dispatch function in some cases (ex: whenMapDispatchToPropsIsMissing)\n  //  and a state object in some others (ex: whenMapStateToPropsIsMissing)\n  // eslint-disable-next-line no-unused-vars\n  getConstant: (dispatch: Dispatch) =>\n    | {\n        dispatch?: Dispatch\n        dependsOnOwnProps?: boolean\n      }\n    | ActionCreatorsMapObject\n    | ActionCreator<any>,\n) {\n  return function initConstantSelector(dispatch: Dispatch) {\n    const constant = getConstant(dispatch)\n\n    function constantSelector() {\n      return constant\n    }\n    constantSelector.dependsOnOwnProps = false\n    return constantSelector\n  }\n}\n\n// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n//\n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\n// TODO Can this get pulled out so that we can subscribe directly to the store if we don't need ownProps?\nexport function getDependsOnOwnProps(mapToProps: MapToProps) {\n  return mapToProps.dependsOnOwnProps\n    ? Boolean(mapToProps.dependsOnOwnProps)\n    : mapToProps.length !== 1\n}\n\n// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n//\n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//\n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//\n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//\nexport function wrapMapToPropsFunc<P extends AnyProps = AnyProps>(\n  mapToProps: MapToProps,\n  methodName: string,\n) {\n  return function initProxySelector(\n    dispatch: Dispatch,\n    { displayName }: { displayName: string },\n  ) {\n    const proxy = function mapToPropsProxy(\n      stateOrDispatch: StateOrDispatch,\n      ownProps?: P,\n    ): MapToProps {\n      return proxy.dependsOnOwnProps\n        ? proxy.mapToProps(stateOrDispatch, ownProps)\n        : proxy.mapToProps(stateOrDispatch, undefined)\n    }\n\n    // allow detectFactoryAndVerify to get ownProps\n    proxy.dependsOnOwnProps = true\n\n    proxy.mapToProps = function detectFactoryAndVerify(\n      stateOrDispatch: StateOrDispatch,\n      ownProps?: P,\n    ): MapToProps {\n      proxy.mapToProps = mapToProps\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps)\n      let props = proxy(stateOrDispatch, ownProps)\n\n      if (typeof props === 'function') {\n        proxy.mapToProps = props\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props)\n        props = proxy(stateOrDispatch, ownProps)\n      }\n\n      if (process.env.NODE_ENV !== 'production')\n        verifyPlainObject(props, displayName, methodName)\n\n      return props\n    }\n\n    return proxy\n  }\n}\n", "import type { Action, Dispatch } from 'redux'\n\nexport function createInvalidArgFactory(arg: unknown, name: string) {\n  return (\n    dispatch: Dispatch<Action<string>>,\n    options: { readonly wrappedComponentName: string },\n  ) => {\n    throw new Error(\n      `Invalid value of type ${typeof arg} for ${name} argument when connecting component ${\n        options.wrappedComponentName\n      }.`,\n    )\n  }\n}\n", "import type { Action, Dispatch } from 'redux'\nimport bindActionCreators from '../utils/bindActionCreators'\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps'\nimport { createInvalidArgFactory } from './invalidArgFactory'\nimport type { MapDispatchToPropsParam } from './selectorFactory'\n\nexport function mapDispatchToPropsFactory<TDispatchProps, TOwnProps>(\n  mapDispatchToProps:\n    | MapDispatchToPropsParam<TDispatchProps, TOwnProps>\n    | undefined,\n) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object'\n    ? wrapMapToPropsConstant((dispatch: Dispatch<Action<string>>) =>\n        // @ts-ignore\n        bindActionCreators(mapDispatchToProps, dispatch),\n      )\n    : !mapDispatchToProps\n      ? wrapMapToPropsConstant((dispatch: Dispatch<Action<string>>) => ({\n          dispatch,\n        }))\n      : typeof mapDispatchToProps === 'function'\n        ? // @ts-ignore\n          wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps')\n        : createInvalidArgFactory(mapDispatchToProps, 'mapDispatchToProps')\n}\n", "import { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps'\nimport { createInvalidArgFactory } from './invalidArgFactory'\nimport type { MapStateToPropsParam } from './selectorFactory'\n\nexport function mapStateToPropsFactory<TStateProps, TOwnProps, State>(\n  mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n) {\n  return !mapStateToProps\n    ? wrapMapToPropsConstant(() => ({}))\n    : typeof mapStateToProps === 'function'\n      ? // @ts-ignore\n        wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps')\n      : createInvalidArgFactory(mapStateToProps, 'mapStateToProps')\n}\n", "import type { Action, Dispatch } from 'redux'\nimport verifyPlainObject from '../utils/verifyPlainObject'\nimport { createInvalidArgFactory } from './invalidArgFactory'\nimport type { MergeProps } from './selectorFactory'\nimport type { EqualityFn } from '../types'\n\nexport function defaultMergeProps<\n  TStateProps,\n  TDispatchProps,\n  TOwnProps,\n  TMergedProps,\n>(\n  stateProps: TStateProps,\n  dispatchProps: TDispatchProps,\n  ownProps: TOwnProps,\n): TMergedProps {\n  // @ts-ignore\n  return { ...ownProps, ...stateProps, ...dispatchProps }\n}\n\nexport function wrapMergePropsFunc<\n  TStateProps,\n  TDispatchProps,\n  TOwnProps,\n  TMergedProps,\n>(\n  mergeProps: MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps>,\n): (\n  dispatch: Dispatch<Action<string>>,\n  options: {\n    readonly displayName: string\n    readonly areMergedPropsEqual: EqualityFn<TMergedProps>\n  },\n) => MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps> {\n  return function initMergePropsProxy(\n    dispatch,\n    { displayName, areMergedPropsEqual },\n  ) {\n    let hasRunOnce = false\n    let mergedProps: TMergedProps\n\n    return function mergePropsProxy(\n      stateProps: TStateProps,\n      dispatchProps: TDispatchProps,\n      ownProps: TOwnProps,\n    ) {\n      const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n\n      if (hasRunOnce) {\n        if (!areMergedPropsEqual(nextMergedProps, mergedProps))\n          mergedProps = nextMergedProps\n      } else {\n        hasRunOnce = true\n        mergedProps = nextMergedProps\n\n        if (process.env.NODE_ENV !== 'production')\n          verifyPlainObject(mergedProps, displayName, 'mergeProps')\n      }\n\n      return mergedProps\n    }\n  }\n}\n\nexport function mergePropsFactory<\n  TStateProps,\n  TDispatchProps,\n  TOwnProps,\n  TMergedProps,\n>(\n  mergeProps?: MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps>,\n) {\n  return !mergeProps\n    ? () => defaultMergeProps\n    : typeof mergeProps === 'function'\n      ? wrapMergePropsFunc(mergeProps)\n      : createInvalidArgFactory(mergeProps, 'mergeProps')\n}\n", "// Default to a dummy \"batch\" implementation that just runs the callback\r\nexport function defaultNoopBatch(callback: () => void) {\r\n  callback()\r\n}\r\n", "import { defaultNoopBatch as batch } from './batch'\n\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\ntype VoidFunc = () => void\n\ntype Listener = {\n  callback: VoidFunc\n  next: Listener | null\n  prev: Listener | null\n}\n\nfunction createListenerCollection() {\n  let first: Listener | null = null\n  let last: Listener | null = null\n\n  return {\n    clear() {\n      first = null\n      last = null\n    },\n\n    notify() {\n      batch(() => {\n        let listener = first\n        while (listener) {\n          listener.callback()\n          listener = listener.next\n        }\n      })\n    },\n\n    get() {\n      const listeners: Listener[] = []\n      let listener = first\n      while (listener) {\n        listeners.push(listener)\n        listener = listener.next\n      }\n      return listeners\n    },\n\n    subscribe(callback: () => void) {\n      let isSubscribed = true\n\n      const listener: Listener = (last = {\n        callback,\n        next: null,\n        prev: last,\n      })\n\n      if (listener.prev) {\n        listener.prev.next = listener\n      } else {\n        first = listener\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return\n        isSubscribed = false\n\n        if (listener.next) {\n          listener.next.prev = listener.prev\n        } else {\n          last = listener.prev\n        }\n        if (listener.prev) {\n          listener.prev.next = listener.next\n        } else {\n          first = listener.next\n        }\n      }\n    },\n  }\n}\n\ntype ListenerCollection = ReturnType<typeof createListenerCollection>\n\nexport interface Subscription {\n  addNestedSub: (listener: VoidFunc) => VoidFunc\n  notifyNestedSubs: VoidFunc\n  handleChangeWrapper: VoidFunc\n  isSubscribed: () => boolean\n  onStateChange?: VoidFunc | null\n  trySubscribe: VoidFunc\n  tryUnsubscribe: VoidFunc\n  getListeners: () => ListenerCollection\n}\n\nconst nullListeners = {\n  notify() {},\n  get: () => [],\n} as unknown as ListenerCollection\n\nexport function createSubscription(store: any, parentSub?: Subscription) {\n  let unsubscribe: VoidFunc | undefined\n  let listeners: ListenerCollection = nullListeners\n\n  // Reasons to keep the subscription active\n  let subscriptionsAmount = 0\n\n  // Is this specific subscription subscribed (or only nested ones?)\n  let selfSubscribed = false\n\n  function addNestedSub(listener: () => void) {\n    trySubscribe()\n\n    const cleanupListener = listeners.subscribe(listener)\n\n    // cleanup nested sub\n    let removed = false\n    return () => {\n      if (!removed) {\n        removed = true\n        cleanupListener()\n        tryUnsubscribe()\n      }\n    }\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify()\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange()\n    }\n  }\n\n  function isSubscribed() {\n    return selfSubscribed\n  }\n\n  function trySubscribe() {\n    subscriptionsAmount++\n    if (!unsubscribe) {\n      unsubscribe = parentSub\n        ? parentSub.addNestedSub(handleChangeWrapper)\n        : store.subscribe(handleChangeWrapper)\n\n      listeners = createListenerCollection()\n    }\n  }\n\n  function tryUnsubscribe() {\n    subscriptionsAmount--\n    if (unsubscribe && subscriptionsAmount === 0) {\n      unsubscribe()\n      unsubscribe = undefined\n      listeners.clear()\n      listeners = nullListeners\n    }\n  }\n\n  function trySubscribeSelf() {\n    if (!selfSubscribed) {\n      selfSubscribed = true\n      trySubscribe()\n    }\n  }\n\n  function tryUnsubscribeSelf() {\n    if (selfSubscribed) {\n      selfSubscribed = false\n      tryUnsubscribe()\n    }\n  }\n\n  const subscription: Subscription = {\n    addNestedSub,\n    notifyNestedSubs,\n    handleChangeWrapper,\n    isSubscribed,\n    trySubscribe: trySubscribeSelf,\n    tryUnsubscribe: tryUnsubscribeSelf,\n    getListeners: () => listeners,\n  }\n\n  return subscription\n}\n", "import { React } from '../utils/react'\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n\n// Matches logic in React's `shared/ExecutionEnvironment` file\nexport const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// Under React Native, we know that we always want to use useLayoutEffect\n\n/**\n * Checks if the code is running in a React Native environment.\n *\n * @see {@link https://github.com/facebook/react-native/issues/1331 Reference}\n */\nexport const isReactNative =\n  typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n\nexport const useIsomorphicLayoutEffect =\n  canUseDOM || isReactNative ? React.useLayoutEffect : React.useEffect\n", "function is(x: unknown, y: unknown) {\r\n  if (x === y) {\r\n    return x !== 0 || y !== 0 || 1 / x === 1 / y\r\n  } else {\r\n    return x !== x && y !== y\r\n  }\r\n}\r\n\r\nexport default function shallowEqual(objA: any, objB: any) {\r\n  if (is(objA, objB)) return true\r\n\r\n  if (\r\n    typeof objA !== 'object' ||\r\n    objA === null ||\r\n    typeof objB !== 'object' ||\r\n    objB === null\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  const keysA = Object.keys(objA)\r\n  const keysB = Object.keys(objB)\r\n\r\n  if (keysA.length !== keysB.length) return false\r\n\r\n  for (let i = 0; i < keysA.length; i++) {\r\n    if (\r\n      !Object.prototype.hasOwnProperty.call(objB, keysA[i]) ||\r\n      !is(objA[keysA[i]], objB[keysA[i]])\r\n    ) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n", "// Copied directly from:\n// https://github.com/mridgway/hoist-non-react-statics/blob/main/src/index.js\n// https://unpkg.com/browse/@types/hoist-non-react-statics@3.3.1/index.d.ts\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nimport type * as React from 'react'\nimport { ForwardRef, Memo, isMemo } from '../utils/react-is'\n\nconst REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true,\n} as const\n\nconst KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true,\n} as const\n\nconst FORWARD_REF_STATICS = {\n  $$typeof: true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n} as const\n\nconst MEMO_STATICS = {\n  $$typeof: true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true,\n} as const\n\nconst TYPE_STATICS = {\n  [ForwardRef]: FORWARD_REF_STATICS,\n  [Memo]: MEMO_STATICS,\n} as const\n\nfunction getStatics(component: any) {\n  // React v16.11 and below\n  if (isMemo(component)) {\n    return MEMO_STATICS\n  }\n\n  // React v16.12 and above\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS\n}\n\nexport type NonReactStatics<\n  S extends React.ComponentType<any>,\n  C extends {\n    [key: string]: true\n  } = {},\n> = {\n  [key in Exclude<\n    keyof S,\n    S extends React.MemoExoticComponent<any>\n      ? keyof typeof MEMO_STATICS | keyof C\n      : S extends React.ForwardRefExoticComponent<any>\n        ? keyof typeof FORWARD_REF_STATICS | keyof C\n        : keyof typeof REACT_STATICS | keyof typeof KNOWN_STATICS | keyof C\n  >]: S[key]\n}\n\nconst defineProperty = Object.defineProperty\nconst getOwnPropertyNames = Object.getOwnPropertyNames\nconst getOwnPropertySymbols = Object.getOwnPropertySymbols\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\nconst getPrototypeOf = Object.getPrototypeOf\nconst objectPrototype = Object.prototype\n\nexport default function hoistNonReactStatics<\n  T extends React.ComponentType<any>,\n  S extends React.ComponentType<any>,\n  C extends {\n    [key: string]: true\n  } = {},\n>(targetComponent: T, sourceComponent: S): T & NonReactStatics<S, C> {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n\n    if (objectPrototype) {\n      const inheritedComponent = getPrototypeOf(sourceComponent)\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent)\n      }\n    }\n\n    let keys: (string | symbol)[] = getOwnPropertyNames(sourceComponent)\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent))\n    }\n\n    const targetStatics = getStatics(targetComponent)\n    const sourceStatics = getStatics(sourceComponent)\n\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i]\n      if (\n        !KNOWN_STATICS[key as keyof typeof KNOWN_STATICS] &&\n        !(sourceStatics && sourceStatics[key as keyof typeof sourceStatics]) &&\n        !(targetStatics && targetStatics[key as keyof typeof targetStatics])\n      ) {\n        const descriptor = getOwnPropertyDescriptor(sourceComponent, key)\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor!)\n        } catch (e) {\n          // ignore\n        }\n      }\n    }\n  }\n\n  return targetComponent as any\n}\n", "/* eslint-disable valid-jsdoc, @typescript-eslint/no-unused-vars */\nimport type { ComponentType } from 'react'\nimport { React } from '../utils/react'\nimport { isValidElementType, isContextConsumer } from '../utils/react-is'\n\nimport type { Store } from 'redux'\n\nimport type {\n  ConnectedComponent,\n  InferableComponentEnhancer,\n  InferableComponentEnhancerWithProps,\n  ResolveThunks,\n  DispatchProp,\n  ConnectPropsMaybeWithoutContext,\n} from '../types'\n\nimport type {\n  MapStateToPropsParam,\n  MapDispatchToPropsParam,\n  MergeProps,\n  MapDispatchToPropsNonObject,\n  SelectorFactoryOptions,\n} from '../connect/selectorFactory'\nimport defaultSelectorFactory from '../connect/selectorFactory'\nimport { mapDispatchToPropsFactory } from '../connect/mapDispatchToProps'\nimport { mapStateToPropsFactory } from '../connect/mapStateToProps'\nimport { mergePropsFactory } from '../connect/mergeProps'\n\nimport type { Subscription } from '../utils/Subscription'\nimport { createSubscription } from '../utils/Subscription'\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect'\nimport shallowEqual from '../utils/shallowEqual'\nimport hoistStatics from '../utils/hoistStatics'\nimport warning from '../utils/warning'\n\nimport type {\n  ReactReduxContextValue,\n  ReactReduxContextInstance,\n} from './Context'\nimport { ReactReduxContext } from './Context'\n\nimport type { uSES } from '../utils/useSyncExternalStore'\nimport { notInitialized } from '../utils/useSyncExternalStore'\n\nlet useSyncExternalStore = notInitialized as uSES\nexport const initializeConnect = (fn: uSES) => {\n  useSyncExternalStore = fn\n}\n\n// Define some constant arrays just to avoid re-creating these\nconst EMPTY_ARRAY: [unknown, number] = [null, 0]\nconst NO_SUBSCRIPTION_ARRAY = [null, null]\n\n// Attempts to stringify whatever not-really-a-component value we were given\n// for logging in an error message\nconst stringifyComponent = (Comp: unknown) => {\n  try {\n    return JSON.stringify(Comp)\n  } catch (err) {\n    return String(Comp)\n  }\n}\n\ntype EffectFunc = (...args: any[]) => void | ReturnType<React.EffectCallback>\n\n// This is \"just\" a `useLayoutEffect`, but with two modifications:\n// - we need to fall back to `useEffect` in SSR to avoid annoying warnings\n// - we extract this to a separate function to avoid closing over values\n//   and causing memory leaks\nfunction useIsomorphicLayoutEffectWithArgs(\n  effectFunc: EffectFunc,\n  effectArgs: any[],\n  dependencies?: React.DependencyList,\n) {\n  useIsomorphicLayoutEffect(() => effectFunc(...effectArgs), dependencies)\n}\n\n// Effect callback, extracted: assign the latest props values to refs for later usage\nfunction captureWrapperProps(\n  lastWrapperProps: React.MutableRefObject<unknown>,\n  lastChildProps: React.MutableRefObject<unknown>,\n  renderIsScheduled: React.MutableRefObject<boolean>,\n  wrapperProps: unknown,\n  // actualChildProps: unknown,\n  childPropsFromStoreUpdate: React.MutableRefObject<unknown>,\n  notifyNestedSubs: () => void,\n) {\n  // We want to capture the wrapper props and child props we used for later comparisons\n  lastWrapperProps.current = wrapperProps\n  renderIsScheduled.current = false\n\n  // If the render was from a store update, clear out that reference and cascade the subscriber update\n  if (childPropsFromStoreUpdate.current) {\n    childPropsFromStoreUpdate.current = null\n    notifyNestedSubs()\n  }\n}\n\n// Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,\n// check for updates after dispatched actions, and trigger re-renders.\nfunction subscribeUpdates(\n  shouldHandleStateChanges: boolean,\n  store: Store,\n  subscription: Subscription,\n  childPropsSelector: (state: unknown, props: unknown) => unknown,\n  lastWrapperProps: React.MutableRefObject<unknown>,\n  lastChildProps: React.MutableRefObject<unknown>,\n  renderIsScheduled: React.MutableRefObject<boolean>,\n  isMounted: React.MutableRefObject<boolean>,\n  childPropsFromStoreUpdate: React.MutableRefObject<unknown>,\n  notifyNestedSubs: () => void,\n  // forceComponentUpdateDispatch: React.Dispatch<any>,\n  additionalSubscribeListener: () => void,\n) {\n  // If we're not subscribed to the store, nothing to do here\n  if (!shouldHandleStateChanges) return () => {}\n\n  // Capture values for checking if and when this component unmounts\n  let didUnsubscribe = false\n  let lastThrownError: Error | null = null\n\n  // We'll run this callback every time a store subscription update propagates to this component\n  const checkForUpdates = () => {\n    if (didUnsubscribe || !isMounted.current) {\n      // Don't run stale listeners.\n      // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n      return\n    }\n\n    // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it\n    const latestStoreState = store.getState()\n\n    let newChildProps, error\n    try {\n      // Actually run the selector with the most recent store state and wrapper props\n      // to determine what the child props should be\n      newChildProps = childPropsSelector(\n        latestStoreState,\n        lastWrapperProps.current,\n      )\n    } catch (e) {\n      error = e\n      lastThrownError = e as Error | null\n    }\n\n    if (!error) {\n      lastThrownError = null\n    }\n\n    // If the child props haven't changed, nothing to do here - cascade the subscription update\n    if (newChildProps === lastChildProps.current) {\n      if (!renderIsScheduled.current) {\n        notifyNestedSubs()\n      }\n    } else {\n      // Save references to the new child props.  Note that we track the \"child props from store update\"\n      // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n      // forcing another re-render, which we don't want.\n      lastChildProps.current = newChildProps\n      childPropsFromStoreUpdate.current = newChildProps\n      renderIsScheduled.current = true\n\n      // TODO This is hacky and not how `uSES` is meant to be used\n      // Trigger the React `useSyncExternalStore` subscriber\n      additionalSubscribeListener()\n    }\n  }\n\n  // Actually subscribe to the nearest connected ancestor (or store)\n  subscription.onStateChange = checkForUpdates\n  subscription.trySubscribe()\n\n  // Pull data from the store after first render in case the store has\n  // changed since we began.\n  checkForUpdates()\n\n  const unsubscribeWrapper = () => {\n    didUnsubscribe = true\n    subscription.tryUnsubscribe()\n    subscription.onStateChange = null\n\n    if (lastThrownError) {\n      // It's possible that we caught an error due to a bad mapState function, but the\n      // parent re-rendered without this component and we're about to unmount.\n      // This shouldn't happen as long as we do top-down subscriptions correctly, but\n      // if we ever do those wrong, this throw will surface the error in our tests.\n      // In that case, throw the error from here so it doesn't get lost.\n      throw lastThrownError\n    }\n  }\n\n  return unsubscribeWrapper\n}\n\n// Reducer initial state creation for our update reducer\nconst initStateUpdates = () => EMPTY_ARRAY\n\nexport interface ConnectProps {\n  /** A custom Context instance that the component can use to access the store from an alternate Provider using that same Context instance */\n  context?: ReactReduxContextInstance\n  /** A Redux store instance to be used for subscriptions instead of the store from a Provider */\n  store?: Store\n}\n\ninterface InternalConnectProps extends ConnectProps {\n  reactReduxForwardedRef?: React.ForwardedRef<unknown>\n}\n\nfunction strictEqual(a: unknown, b: unknown) {\n  return a === b\n}\n\n/**\n * Infers the type of props that a connector will inject into a component.\n */\nexport type ConnectedProps<TConnector> =\n  TConnector extends InferableComponentEnhancerWithProps<\n    infer TInjectedProps,\n    any\n  >\n    ? unknown extends TInjectedProps\n      ? TConnector extends InferableComponentEnhancer<infer TInjectedProps>\n        ? TInjectedProps\n        : never\n      : TInjectedProps\n    : never\n\nexport interface ConnectOptions<\n  State = unknown,\n  TStateProps = {},\n  TOwnProps = {},\n  TMergedProps = {},\n> {\n  forwardRef?: boolean\n  context?: typeof ReactReduxContext\n  areStatesEqual?: (\n    nextState: State,\n    prevState: State,\n    nextOwnProps: TOwnProps,\n    prevOwnProps: TOwnProps,\n  ) => boolean\n\n  areOwnPropsEqual?: (\n    nextOwnProps: TOwnProps,\n    prevOwnProps: TOwnProps,\n  ) => boolean\n\n  areStatePropsEqual?: (\n    nextStateProps: TStateProps,\n    prevStateProps: TStateProps,\n  ) => boolean\n  areMergedPropsEqual?: (\n    nextMergedProps: TMergedProps,\n    prevMergedProps: TMergedProps,\n  ) => boolean\n}\n\n/**\n * Connects a React component to a Redux store.\n *\n * - Without arguments, just wraps the component, without changing the behavior / props\n *\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\n * is to override ownProps (as stated in the docs), so what remains is everything that's\n * not a state or dispatch prop\n *\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\n * should be valid component props, because it depends on mergeProps implementation.\n * As such, it is the user's responsibility to extend ownProps interface from state or\n * dispatch props or both when applicable\n *\n * @param mapStateToProps\n * @param mapDispatchToProps\n * @param mergeProps\n * @param options\n */\nexport interface Connect<DefaultState = unknown> {\n  // tslint:disable:no-unnecessary-generics\n  (): InferableComponentEnhancer<DispatchProp>\n\n  /** mapState only */\n  <TStateProps = {}, no_dispatch = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n  ): InferableComponentEnhancerWithProps<TStateProps & DispatchProp, TOwnProps>\n\n  /** mapDispatch only (as a function) */\n  <no_state = {}, TDispatchProps = {}, TOwnProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: MapDispatchToPropsNonObject<TDispatchProps, TOwnProps>,\n  ): InferableComponentEnhancerWithProps<TDispatchProps, TOwnProps>\n\n  /** mapDispatch only (as an object) */\n  <no_state = {}, TDispatchProps = {}, TOwnProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n  ): InferableComponentEnhancerWithProps<\n    ResolveThunks<TDispatchProps>,\n    TOwnProps\n  >\n\n  /** mapState and mapDispatch (as a function)*/\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: MapDispatchToPropsNonObject<TDispatchProps, TOwnProps>,\n  ): InferableComponentEnhancerWithProps<\n    TStateProps & TDispatchProps,\n    TOwnProps\n  >\n\n  /** mapState and mapDispatch (nullish) */\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: null | undefined,\n  ): InferableComponentEnhancerWithProps<TStateProps, TOwnProps>\n\n  /** mapState and mapDispatch (as an object) */\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n  ): InferableComponentEnhancerWithProps<\n    TStateProps & ResolveThunks<TDispatchProps>,\n    TOwnProps\n  >\n\n  /** mergeProps only */\n  <no_state = {}, no_dispatch = {}, TOwnProps = {}, TMergedProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: null | undefined,\n    mergeProps: MergeProps<undefined, DispatchProp, TOwnProps, TMergedProps>,\n  ): InferableComponentEnhancerWithProps<TMergedProps, TOwnProps>\n\n  /** mapState and mergeProps */\n  <\n    TStateProps = {},\n    no_dispatch = {},\n    TOwnProps = {},\n    TMergedProps = {},\n    State = DefaultState,\n  >(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: null | undefined,\n    mergeProps: MergeProps<TStateProps, DispatchProp, TOwnProps, TMergedProps>,\n  ): InferableComponentEnhancerWithProps<TMergedProps, TOwnProps>\n\n  /** mapDispatch (as a object) and mergeProps */\n  <no_state = {}, TDispatchProps = {}, TOwnProps = {}, TMergedProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n    mergeProps: MergeProps<undefined, TDispatchProps, TOwnProps, TMergedProps>,\n  ): InferableComponentEnhancerWithProps<TMergedProps, TOwnProps>\n\n  /** mapState and options */\n  <TStateProps = {}, no_dispatch = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: null | undefined,\n    mergeProps: null | undefined,\n    options: ConnectOptions<State, TStateProps, TOwnProps>,\n  ): InferableComponentEnhancerWithProps<DispatchProp & TStateProps, TOwnProps>\n\n  /** mapDispatch (as a function) and options */\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: MapDispatchToPropsNonObject<TDispatchProps, TOwnProps>,\n    mergeProps: null | undefined,\n    options: ConnectOptions<{}, TStateProps, TOwnProps>,\n  ): InferableComponentEnhancerWithProps<TDispatchProps, TOwnProps>\n\n  /** mapDispatch (as an object) and options*/\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}>(\n    mapStateToProps: null | undefined,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n    mergeProps: null | undefined,\n    options: ConnectOptions<{}, TStateProps, TOwnProps>,\n  ): InferableComponentEnhancerWithProps<\n    ResolveThunks<TDispatchProps>,\n    TOwnProps\n  >\n\n  /** mapState,  mapDispatch (as a function), and options */\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: MapDispatchToPropsNonObject<TDispatchProps, TOwnProps>,\n    mergeProps: null | undefined,\n    options: ConnectOptions<State, TStateProps, TOwnProps>,\n  ): InferableComponentEnhancerWithProps<\n    TStateProps & TDispatchProps,\n    TOwnProps\n  >\n\n  /** mapState,  mapDispatch (as an object), and options */\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n    mergeProps: null | undefined,\n    options: ConnectOptions<State, TStateProps, TOwnProps>,\n  ): InferableComponentEnhancerWithProps<\n    TStateProps & ResolveThunks<TDispatchProps>,\n    TOwnProps\n  >\n\n  /** mapState, mapDispatch, mergeProps, and options */\n  <\n    TStateProps = {},\n    TDispatchProps = {},\n    TOwnProps = {},\n    TMergedProps = {},\n    State = DefaultState,\n  >(\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n    mergeProps: MergeProps<\n      TStateProps,\n      TDispatchProps,\n      TOwnProps,\n      TMergedProps\n    >,\n    options?: ConnectOptions<State, TStateProps, TOwnProps, TMergedProps>,\n  ): InferableComponentEnhancerWithProps<TMergedProps, TOwnProps>\n  // tslint:enable:no-unnecessary-generics\n}\n\nlet hasWarnedAboutDeprecatedPureOption = false\n\n/**\n * Connects a React component to a Redux store.\n *\n * - Without arguments, just wraps the component, without changing the behavior / props\n *\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\n * is to override ownProps (as stated in the docs), so what remains is everything that's\n * not a state or dispatch prop\n *\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\n * should be valid component props, because it depends on mergeProps implementation.\n * As such, it is the user's responsibility to extend ownProps interface from state or\n * dispatch props or both when applicable\n *\n * @param mapStateToProps A function that extracts values from state\n * @param mapDispatchToProps Setup for dispatching actions\n * @param mergeProps Optional callback to merge state and dispatch props together\n * @param options Options for configuring the connection\n *\n */\nfunction connect<\n  TStateProps = {},\n  TDispatchProps = {},\n  TOwnProps = {},\n  TMergedProps = {},\n  State = unknown,\n>(\n  mapStateToProps?: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n  mapDispatchToProps?: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n  mergeProps?: MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps>,\n  {\n    // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.\n    // @ts-ignore\n    pure,\n    areStatesEqual = strictEqual,\n    areOwnPropsEqual = shallowEqual,\n    areStatePropsEqual = shallowEqual,\n    areMergedPropsEqual = shallowEqual,\n\n    // use React's forwardRef to expose a ref of the wrapped component\n    forwardRef = false,\n\n    // the context consumer to use\n    context = ReactReduxContext,\n  }: ConnectOptions<unknown, unknown, unknown, unknown> = {},\n): unknown {\n  if (process.env.NODE_ENV !== 'production') {\n    if (pure !== undefined && !hasWarnedAboutDeprecatedPureOption) {\n      hasWarnedAboutDeprecatedPureOption = true\n      warning(\n        'The `pure` option has been removed. `connect` is now always a \"pure/memoized\" component',\n      )\n    }\n  }\n\n  const Context = context\n\n  const initMapStateToProps = mapStateToPropsFactory(mapStateToProps)\n  const initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps)\n  const initMergeProps = mergePropsFactory(mergeProps)\n\n  const shouldHandleStateChanges = Boolean(mapStateToProps)\n\n  const wrapWithConnect = <TProps,>(\n    WrappedComponent: ComponentType<TProps>,\n  ) => {\n    type WrappedComponentProps = TProps &\n      ConnectPropsMaybeWithoutContext<TProps>\n\n    if (process.env.NODE_ENV !== 'production') {\n      const isValid = /*#__PURE__*/ isValidElementType(WrappedComponent)\n      if (!isValid)\n        throw new Error(\n          `You must pass a component to the function returned by connect. Instead received ${stringifyComponent(\n            WrappedComponent,\n          )}`,\n        )\n    }\n\n    const wrappedComponentName =\n      WrappedComponent.displayName || WrappedComponent.name || 'Component'\n\n    const displayName = `Connect(${wrappedComponentName})`\n\n    const selectorFactoryOptions: SelectorFactoryOptions<\n      any,\n      any,\n      any,\n      any,\n      State\n    > = {\n      shouldHandleStateChanges,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent,\n      // @ts-ignore\n      initMapStateToProps,\n      // @ts-ignore\n      initMapDispatchToProps,\n      initMergeProps,\n      areStatesEqual,\n      areStatePropsEqual,\n      areOwnPropsEqual,\n      areMergedPropsEqual,\n    }\n\n    function ConnectFunction<TOwnProps>(\n      props: InternalConnectProps & TOwnProps,\n    ) {\n      const [propsContext, reactReduxForwardedRef, wrapperProps] =\n        React.useMemo(() => {\n          // Distinguish between actual \"data\" props that were passed to the wrapper component,\n          // and values needed to control behavior (forwarded refs, alternate context instances).\n          // To maintain the wrapperProps object reference, memoize this destructuring.\n          const { reactReduxForwardedRef, ...wrapperProps } = props\n          return [props.context, reactReduxForwardedRef, wrapperProps]\n        }, [props])\n\n      const ContextToUse: ReactReduxContextInstance = React.useMemo(() => {\n        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n        // Memoize the check that determines which context instance we should use.\n        let ResultContext = Context\n        if (propsContext?.Consumer) {\n          if (process.env.NODE_ENV !== 'production') {\n            const isValid = /*#__PURE__*/ isContextConsumer(\n              // @ts-ignore\n              <propsContext.Consumer />,\n            )\n            if (!isValid) {\n              throw new Error(\n                'You must pass a valid React context consumer as `props.context`',\n              )\n            }\n            ResultContext = propsContext\n          }\n        }\n        return ResultContext\n      }, [propsContext, Context])\n\n      // Retrieve the store and ancestor subscription via context, if available\n      const contextValue = React.useContext(ContextToUse)\n\n      // The store _must_ exist as either a prop or in context.\n      // We'll check to see if it _looks_ like a Redux store first.\n      // This allows us to pass through a `store` prop that is just a plain value.\n      const didStoreComeFromProps =\n        Boolean(props.store) &&\n        Boolean(props.store!.getState) &&\n        Boolean(props.store!.dispatch)\n      const didStoreComeFromContext =\n        Boolean(contextValue) && Boolean(contextValue!.store)\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        !didStoreComeFromProps &&\n        !didStoreComeFromContext\n      ) {\n        throw new Error(\n          `Could not find \"store\" in the context of ` +\n            `\"${displayName}\". Either wrap the root component in a <Provider>, ` +\n            `or pass a custom React context provider to <Provider> and the corresponding ` +\n            `React context consumer to ${displayName} in connect options.`,\n        )\n      }\n\n      // Based on the previous check, one of these must be true\n      const store: Store = didStoreComeFromProps\n        ? props.store!\n        : contextValue!.store\n\n      const getServerState = didStoreComeFromContext\n        ? contextValue!.getServerState\n        : store.getState\n\n      const childPropsSelector = React.useMemo(() => {\n        // The child props selector needs the store reference as an input.\n        // Re-create this selector whenever the store changes.\n        return defaultSelectorFactory(store.dispatch, selectorFactoryOptions)\n      }, [store])\n\n      const [subscription, notifyNestedSubs] = React.useMemo(() => {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY\n\n        // This Subscription's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n        const subscription = createSubscription(\n          store,\n          didStoreComeFromProps ? undefined : contextValue!.subscription,\n        )\n\n        // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `subscription` will then be null. This can\n        // probably be avoided if Subscription's listeners logic is changed to not call listeners\n        // that have been unsubscribed in the  middle of the notification loop.\n        const notifyNestedSubs =\n          subscription.notifyNestedSubs.bind(subscription)\n\n        return [subscription, notifyNestedSubs]\n      }, [store, didStoreComeFromProps, contextValue])\n\n      // Determine what {store, subscription} value should be put into nested context, if necessary,\n      // and memoize that value to avoid unnecessary context updates.\n      const overriddenContextValue = React.useMemo(() => {\n        if (didStoreComeFromProps) {\n          // This component is directly subscribed to a store from props.\n          // We don't want descendants reading from this store - pass down whatever\n          // the existing context value is from the nearest connected ancestor.\n          return contextValue!\n        }\n\n        // Otherwise, put this component's subscription instance into context, so that\n        // connected descendants won't update until after this component is done\n        return {\n          ...contextValue,\n          subscription,\n        } as ReactReduxContextValue\n      }, [didStoreComeFromProps, contextValue, subscription])\n\n      // Set up refs to coordinate values between the subscription effect and the render logic\n      const lastChildProps = React.useRef<unknown>(undefined)\n      const lastWrapperProps = React.useRef(wrapperProps)\n      const childPropsFromStoreUpdate = React.useRef<unknown>(undefined)\n      const renderIsScheduled = React.useRef(false)\n      const isMounted = React.useRef(false)\n\n      // TODO: Change this to `React.useRef<Error>(undefined)` after upgrading to React 19.\n      /**\n       * @todo Change this to `React.useRef<Error>(undefined)` after upgrading to React 19.\n       */\n      const latestSubscriptionCallbackError = React.useRef<Error | undefined>(\n        undefined,\n      )\n\n      useIsomorphicLayoutEffect(() => {\n        isMounted.current = true\n        return () => {\n          isMounted.current = false\n        }\n      }, [])\n\n      const actualChildPropsSelector = React.useMemo(() => {\n        const selector = () => {\n          // Tricky logic here:\n          // - This render may have been triggered by a Redux store update that produced new child props\n          // - However, we may have gotten new wrapper props after that\n          // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n          // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n          // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n          if (\n            childPropsFromStoreUpdate.current &&\n            wrapperProps === lastWrapperProps.current\n          ) {\n            return childPropsFromStoreUpdate.current\n          }\n\n          // TODO We're reading the store directly in render() here. Bad idea?\n          // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n          // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n          // to determine what the child props should be.\n          return childPropsSelector(store.getState(), wrapperProps)\n        }\n        return selector\n      }, [store, wrapperProps])\n\n      // We need this to execute synchronously every time we re-render. However, React warns\n      // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n      // just useEffect instead to avoid the warning, since neither will run anyway.\n\n      const subscribeForReact = React.useMemo(() => {\n        const subscribe = (reactListener: () => void) => {\n          if (!subscription) {\n            return () => {}\n          }\n\n          return subscribeUpdates(\n            shouldHandleStateChanges,\n            store,\n            subscription,\n            // @ts-ignore\n            childPropsSelector,\n            lastWrapperProps,\n            lastChildProps,\n            renderIsScheduled,\n            isMounted,\n            childPropsFromStoreUpdate,\n            notifyNestedSubs,\n            reactListener,\n          )\n        }\n\n        return subscribe\n      }, [subscription])\n\n      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [\n        lastWrapperProps,\n        lastChildProps,\n        renderIsScheduled,\n        wrapperProps,\n        childPropsFromStoreUpdate,\n        notifyNestedSubs,\n      ])\n\n      let actualChildProps: Record<string, unknown>\n\n      try {\n        actualChildProps = useSyncExternalStore(\n          // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing\n          subscribeForReact,\n          // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,\n          // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.\n          actualChildPropsSelector,\n          getServerState\n            ? () => childPropsSelector(getServerState(), wrapperProps)\n            : actualChildPropsSelector,\n        )\n      } catch (err) {\n        if (latestSubscriptionCallbackError.current) {\n          // eslint-disable-next-line no-extra-semi\n          ;(err as Error).message +=\n            `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n        }\n\n        throw err\n      }\n\n      useIsomorphicLayoutEffect(() => {\n        latestSubscriptionCallbackError.current = undefined\n        childPropsFromStoreUpdate.current = undefined\n        lastChildProps.current = actualChildProps\n      })\n\n      // Now that all that's done, we can finally try to actually render the child component.\n      // We memoize the elements for the rendered child component as an optimization.\n      const renderedWrappedComponent = React.useMemo(() => {\n        return (\n          // @ts-ignore\n          <WrappedComponent\n            {...actualChildProps}\n            ref={reactReduxForwardedRef}\n          />\n        )\n      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps])\n\n      // If React sees the exact same element reference as last time, it bails out of re-rendering\n      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n      const renderedChild = React.useMemo(() => {\n        if (shouldHandleStateChanges) {\n          // If this component is subscribed to store updates, we need to pass its own\n          // subscription instance down to our descendants. That means rendering the same\n          // Context instance, and putting a different value into the context.\n          return (\n            <ContextToUse.Provider value={overriddenContextValue}>\n              {renderedWrappedComponent}\n            </ContextToUse.Provider>\n          )\n        }\n\n        return renderedWrappedComponent\n      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue])\n\n      return renderedChild\n    }\n\n    const _Connect = React.memo(ConnectFunction)\n\n    type ConnectedWrapperComponent = typeof _Connect & {\n      WrappedComponent: typeof WrappedComponent\n    }\n\n    // Add a hacky cast to get the right output type\n    const Connect = _Connect as unknown as ConnectedComponent<\n      typeof WrappedComponent,\n      WrappedComponentProps\n    >\n    Connect.WrappedComponent = WrappedComponent\n    Connect.displayName = ConnectFunction.displayName = displayName\n\n    if (forwardRef) {\n      const _forwarded = React.forwardRef(\n        function forwardConnectRef(props, ref) {\n          // @ts-ignore\n          return <Connect {...props} reactReduxForwardedRef={ref} />\n        },\n      )\n\n      const forwarded = _forwarded as ConnectedWrapperComponent\n      forwarded.displayName = displayName\n      forwarded.WrappedComponent = WrappedComponent\n      return /*#__PURE__*/ hoistStatics(forwarded, WrappedComponent)\n    }\n\n    return /*#__PURE__*/ hoistStatics(Connect, WrappedComponent)\n  }\n\n  return wrapWithConnect\n}\n\nexport default connect as Connect\n", "import type { Context, ReactNode } from 'react'\nimport { React } from '../utils/react'\nimport type { Action, Store, UnknownAction } from 'redux'\nimport type { DevModeCheckFrequency } from '../hooks/useSelector'\nimport { createSubscription } from '../utils/Subscription'\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect'\nimport type { ReactReduxContextValue } from './Context'\nimport { ReactReduxContext } from './Context'\n\nexport interface ProviderProps<\n  A extends Action<string> = UnknownAction,\n  S = unknown,\n> {\n  /**\n   * The single Redux store in your application.\n   */\n  store: Store<S, A>\n\n  /**\n   * An optional server state snapshot. Will be used during initial hydration render if available, to ensure that the UI output is consistent with the HTML generated on the server.\n   */\n  serverState?: S\n\n  /**\n   * Optional context to be used internally in react-redux. Use React.createContext() to create a context to be used.\n   * If this is used, you'll need to customize `connect` by supplying the same context provided to the Provider.\n   * Set the initial value to null, and the hooks will error\n   * if this is not overwritten by Provider.\n   */\n  context?: Context<ReactReduxContextValue<S, A> | null>\n\n  /**\n   * Determines the frequency of stability checks for all selectors.\n   * This setting overrides the global configuration for\n   * the `useSelector` stability check, allowing you to specify how often\n   * these checks should occur in development mode.\n   *\n   * @since 8.1.0\n   */\n  stabilityCheck?: DevModeCheckFrequency\n\n  /**\n   * Determines the frequency of identity function checks for all selectors.\n   * This setting overrides the global configuration for\n   * the `useSelector` identity function check, allowing you to specify how often\n   * these checks should occur in development mode.\n   *\n   * **Note**: Previously referred to as `noopCheck`.\n   *\n   * @since 9.0.0\n   */\n  identityFunctionCheck?: DevModeCheckFrequency\n\n  children: ReactNode\n}\n\nfunction Provider<A extends Action<string> = UnknownAction, S = unknown>({\n  store,\n  context,\n  children,\n  serverState,\n  stabilityCheck = 'once',\n  identityFunctionCheck = 'once',\n}: ProviderProps<A, S>) {\n  const contextValue = React.useMemo(() => {\n    const subscription = createSubscription(store)\n    return {\n      store,\n      subscription,\n      getServerState: serverState ? () => serverState : undefined,\n      stabilityCheck,\n      identityFunctionCheck,\n    }\n  }, [store, serverState, stabilityCheck, identityFunctionCheck])\n\n  const previousState = React.useMemo(() => store.getState(), [store])\n\n  useIsomorphicLayoutEffect(() => {\n    const { subscription } = contextValue\n    subscription.onStateChange = subscription.notifyNestedSubs\n    subscription.trySubscribe()\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs()\n    }\n    return () => {\n      subscription.tryUnsubscribe()\n      subscription.onStateChange = undefined\n    }\n  }, [contextValue, previousState])\n\n  const Context = context || ReactReduxContext\n\n  // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>\n}\n\nexport default Provider\n", "import type { Context } from 'react'\nimport type { Action, Store } from 'redux'\nimport type { ReactReduxContextValue } from '../components/Context'\nimport { ReactReduxContext } from '../components/Context'\nimport {\n  createReduxContextHook,\n  useReduxContext as useDefaultReduxContext,\n} from './useReduxContext'\n\n/**\n * Represents a type that extracts the action type from a given Redux store.\n *\n * @template StoreType - The specific type of the Redux store.\n *\n * @since 9.1.0\n * @internal\n */\nexport type ExtractStoreActionType<StoreType extends Store> =\n  StoreType extends Store<any, infer ActionType> ? ActionType : never\n\n/**\n * Represents a custom hook that provides access to the Redux store.\n *\n * @template StoreType - The specific type of the Redux store that gets returned.\n *\n * @since 9.1.0\n * @public\n */\nexport interface UseStore<StoreType extends Store> {\n  /**\n   * Returns the Redux store instance.\n   *\n   * @returns The Redux store instance.\n   */\n  (): StoreType\n\n  /**\n   * Returns the Redux store instance with specific state and action types.\n   *\n   * @returns The Redux store with the specified state and action types.\n   *\n   * @template StateType - The specific type of the state used in the store.\n   * @template ActionType - The specific type of the actions used in the store.\n   */\n  <\n    StateType extends ReturnType<StoreType['getState']> = ReturnType<\n      StoreType['getState']\n    >,\n    ActionType extends Action = ExtractStoreActionType<Store>,\n  >(): Store<StateType, ActionType>\n\n  /**\n   * Creates a \"pre-typed\" version of {@linkcode useStore useStore}\n   * where the type of the Redux `store` is predefined.\n   *\n   * This allows you to set the `store` type once, eliminating the need to\n   * specify it with every {@linkcode useStore useStore} call.\n   *\n   * @returns A pre-typed `useStore` with the store type already defined.\n   *\n   * @example\n   * ```ts\n   * export const useAppStore = useStore.withTypes<AppStore>()\n   * ```\n   *\n   * @template OverrideStoreType - The specific type of the Redux store that gets returned.\n   *\n   * @since 9.1.0\n   */\n  withTypes: <\n    OverrideStoreType extends StoreType,\n  >() => UseStore<OverrideStoreType>\n}\n\n/**\n * Hook factory, which creates a `useStore` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useStore` hook bound to the specified context.\n */\nexport function createStoreHook<\n  StateType = unknown,\n  ActionType extends Action = Action,\n>(\n  // @ts-ignore\n  context?: Context<ReactReduxContextValue<\n    StateType,\n    ActionType\n  > | null> = ReactReduxContext,\n) {\n  const useReduxContext =\n    context === ReactReduxContext\n      ? useDefaultReduxContext\n      : // @ts-ignore\n        createReduxContextHook(context)\n  const useStore = () => {\n    const { store } = useReduxContext()\n    return store\n  }\n\n  Object.assign(useStore, {\n    withTypes: () => useStore,\n  })\n\n  return useStore as UseStore<Store<StateType, ActionType>>\n}\n\n/**\n * A hook to access the redux store.\n *\n * @returns {any} the redux store\n *\n * @example\n *\n * import React from 'react'\n * import { useStore } from 'react-redux'\n *\n * export const ExampleComponent = () => {\n *   const store = useStore()\n *   return <div>{store.getState()}</div>\n * }\n */\nexport const useStore = /*#__PURE__*/ createStoreHook()\n", "import type { Context } from 'react'\nimport type { Action, Dispatch, UnknownAction } from 'redux'\n\nimport type { ReactReduxContextValue } from '../components/Context'\nimport { ReactReduxContext } from '../components/Context'\nimport { createStoreHook, useStore as useDefaultStore } from './useStore'\n\n/**\n * Represents a custom hook that provides a dispatch function\n * from the Redux store.\n *\n * @template DispatchType - The specific type of the dispatch function.\n *\n * @since 9.1.0\n * @public\n */\nexport interface UseDispatch<\n  DispatchType extends Dispatch<UnknownAction> = Dispatch<UnknownAction>,\n> {\n  /**\n   * Returns the dispatch function from the Redux store.\n   *\n   * @returns The dispatch function from the Redux store.\n   *\n   * @template AppDispatch - The specific type of the dispatch function.\n   */\n  <AppDispatch extends DispatchType = DispatchType>(): AppDispatch\n\n  /**\n   * Creates a \"pre-typed\" version of {@linkcode useDispatch useDispatch}\n   * where the type of the `dispatch` function is predefined.\n   *\n   * This allows you to set the `dispatch` type once, eliminating the need to\n   * specify it with every {@linkcode useDispatch useDispatch} call.\n   *\n   * @returns A pre-typed `useDispatch` with the dispatch type already defined.\n   *\n   * @example\n   * ```ts\n   * export const useAppDispatch = useDispatch.withTypes<AppDispatch>()\n   * ```\n   *\n   * @template OverrideDispatchType - The specific type of the dispatch function.\n   *\n   * @since 9.1.0\n   */\n  withTypes: <\n    OverrideDispatchType extends DispatchType,\n  >() => UseDispatch<OverrideDispatchType>\n}\n\n/**\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useDispatch` hook bound to the specified context.\n */\nexport function createDispatchHook<\n  StateType = unknown,\n  ActionType extends Action = UnknownAction,\n>(\n  // @ts-ignore\n  context?: Context<ReactReduxContextValue<\n    StateType,\n    ActionType\n  > | null> = ReactReduxContext,\n) {\n  const useStore =\n    context === ReactReduxContext ? useDefaultStore : createStoreHook(context)\n\n  const useDispatch = () => {\n    const store = useStore()\n    return store.dispatch\n  }\n\n  Object.assign(useDispatch, {\n    withTypes: () => useDispatch,\n  })\n\n  return useDispatch as UseDispatch<Dispatch<ActionType>>\n}\n\n/**\n * A hook to access the redux `dispatch` function.\n *\n * @returns {any|function} redux store's `dispatch` function\n *\n * @example\n *\n * import React, { useCallback } from 'react'\n * import { useDispatch } from 'react-redux'\n *\n * export const CounterComponent = ({ value }) => {\n *   const dispatch = useDispatch()\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\n *   return (\n *     <div>\n *       <span>{value}</span>\n *       <button onClick={increaseCounter}>Increase counter</button>\n *     </div>\n *   )\n * }\n */\nexport const useDispatch = /*#__PURE__*/ createDispatchHook()\n", "import connect from './components/connect'\nexport type {\n  Connect,\n  ConnectProps,\n  ConnectedProps,\n} from './components/connect'\n\nimport shallowEqual from './utils/shallowEqual'\n\nimport Provider from './components/Provider'\nimport { defaultNoopBatch } from './utils/batch'\n\nexport { ReactReduxContext } from './components/Context'\nexport type { ReactReduxContextValue } from './components/Context'\n\nexport type { ProviderProps } from './components/Provider'\n\nexport type {\n  MapDispatchToProps,\n  MapDispatchToPropsFactory,\n  MapDispatchToPropsFunction,\n  MapDispatchToPropsNonObject,\n  MapDispatchToPropsParam,\n  MapStateToProps,\n  MapStateToPropsFactory,\n  MapStateToPropsParam,\n  MergeProps,\n  Selector,\n  SelectorFactory,\n} from './connect/selectorFactory'\n\nexport { createDispatchHook, useDispatch } from './hooks/useDispatch'\nexport type { UseDispatch } from './hooks/useDispatch'\n\nexport { createSelectorHook, useSelector } from './hooks/useSelector'\nexport type { UseSelector } from './hooks/useSelector'\n\nexport { createStoreHook, useStore } from './hooks/useStore'\nexport type { UseStore } from './hooks/useStore'\n\nexport type { Subscription } from './utils/Subscription'\n\nexport * from './types'\n\n/**\n * @deprecated As of React 18, batching is enabled by default for ReactDOM and React Native.\n * This is now a no-op that immediately runs the callback.\n */\nconst batch = defaultNoopBatch\n\nexport { Provider, batch, connect, shallowEqual }\n", "'use strict'\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./react-redux.production.min.cjs')\n} else {\n  module.exports = require('./react-redux.development.cjs')\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.showLoading = showLoading;\nexports.hideLoading = hideLoading;\nexports.resetLoading = resetLoading;\nexports.loadingBarReducer = loadingBarReducer;\nexports.DEFAULT_SCOPE = exports.RESET = exports.HIDE = exports.SHOW = void 0;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SHOW = 'loading-bar/SHOW';\nexports.SHOW = SHOW;\nvar HIDE = 'loading-bar/HIDE';\nexports.HIDE = HIDE;\nvar RESET = 'loading-bar/RESET';\nexports.RESET = RESET;\nvar DEFAULT_SCOPE = 'default';\nexports.DEFAULT_SCOPE = DEFAULT_SCOPE;\n\nfunction showLoading() {\n  var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SCOPE;\n  return {\n    type: SHOW,\n    payload: {\n      scope: scope\n    }\n  };\n}\n\nfunction hideLoading() {\n  var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SCOPE;\n  return {\n    type: HIDE,\n    payload: {\n      scope: scope\n    }\n  };\n}\n\nfunction resetLoading() {\n  var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SCOPE;\n  return {\n    type: RESET,\n    payload: {\n      scope: scope\n    }\n  };\n}\n\nfunction loadingBarReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _ref = action.payload || {},\n      _ref$scope = _ref.scope,\n      scope = _ref$scope === void 0 ? DEFAULT_SCOPE : _ref$scope;\n\n  switch (action.type) {\n    case SHOW:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, scope, (state[scope] || 0) + 1));\n\n    case HIDE:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, scope, Math.max(0, (state[scope] || 1) - 1)));\n\n    case RESET:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, scope, 0));\n\n    default:\n      return state;\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.LoadingBar = exports.TERMINATING_ANIMATION_DURATION = exports.ANIMATION_DURATION = exports.PROGRESS_INCREASE = exports.MAX_PROGRESS = exports.UPDATE_TIME = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _propTypes = require(\"prop-types\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _loading_bar_ducks = require(\"./loading_bar_ducks\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar UPDATE_TIME = 400;\nexports.UPDATE_TIME = UPDATE_TIME;\nvar MAX_PROGRESS = 99;\nexports.MAX_PROGRESS = MAX_PROGRESS;\nvar PROGRESS_INCREASE = 20;\nexports.PROGRESS_INCREASE = PROGRESS_INCREASE;\nvar ANIMATION_DURATION = UPDATE_TIME * 2;\nexports.ANIMATION_DURATION = ANIMATION_DURATION;\nvar TERMINATING_ANIMATION_DURATION = UPDATE_TIME / 2;\nexports.TERMINATING_ANIMATION_DURATION = TERMINATING_ANIMATION_DURATION;\nvar initialState = {\n  percent: 0,\n  status: 'hidden'\n};\n\nvar LoadingBar = /*#__PURE__*/function (_Component) {\n  _inherits(LoadingBar, _Component);\n\n  var _super = _createSuper(LoadingBar);\n\n  _createClass(LoadingBar, null, [{\n    key: \"shouldStart\",\n    value: function shouldStart(props, state) {\n      return props.loading > 0 && ['hidden', 'stopping'].indexOf(state.status) >= 0;\n    }\n  }, {\n    key: \"shouldStop\",\n    value: function shouldStop(props, state) {\n      return props.loading === 0 && ['starting', 'running'].indexOf(state.status) >= 0;\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (LoadingBar.shouldStart(nextProps, prevState)) {\n        return {\n          status: 'starting'\n        };\n      }\n\n      if (LoadingBar.shouldStop(nextProps, prevState)) {\n        return {\n          status: 'stopping'\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  function LoadingBar(props) {\n    var _this;\n\n    _classCallCheck(this, LoadingBar);\n\n    _this = _super.call(this, props);\n\n    _this.reset = function () {\n      _this.terminatingAnimationTimeoutId = null;\n\n      _this.setState(initialState);\n    };\n\n    _this.newPercent = function (percent, progressIncrease) {\n      // Use cosine as a smoothing function\n      // It could be any function to slow down progress near the ending 100%\n      var smoothedProgressIncrease = progressIncrease * Math.cos(percent * (Math.PI / 2 / 100));\n      return percent + smoothedProgressIncrease;\n    };\n\n    _this.simulateProgress = function () {\n      _this.setState(function (prevState, _ref) {\n        var maxProgress = _ref.maxProgress,\n            progressIncrease = _ref.progressIncrease;\n        var percent = prevState.percent;\n\n        var newPercent = _this.newPercent(percent, progressIncrease);\n\n        if (newPercent <= maxProgress) {\n          percent = newPercent;\n        }\n\n        return {\n          percent: percent\n        };\n      });\n    };\n\n    _this.state = _objectSpread({}, initialState);\n    return _this;\n  }\n\n  _createClass(LoadingBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var status = this.state.status;\n\n      if (status === 'starting') {\n        this.start();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var status = this.state.status;\n\n      if (prevState.status !== status) {\n        if (status === 'starting') {\n          this.start();\n        }\n\n        if (status === 'stopping') {\n          this.stop();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.progressIntervalId);\n      clearTimeout(this.terminatingAnimationTimeoutId);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      // There could be previous termination animation going, so we need to\n      // cancel it and forcefully reset the Loading Bar before starting\n      // the progress simulation from 0\n      if (this.terminatingAnimationTimeoutId) {\n        clearTimeout(this.terminatingAnimationTimeoutId);\n        this.reset();\n      }\n\n      var updateTime = this.props.updateTime;\n      this.progressIntervalId = setInterval(this.simulateProgress, updateTime);\n      this.setState({\n        status: 'running'\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var showFastActions = this.props.showFastActions;\n      clearInterval(this.progressIntervalId);\n      this.progressIntervalId = null;\n      var terminatingAnimationDuration = this.isShown() || showFastActions ? TERMINATING_ANIMATION_DURATION : 0;\n      this.terminatingAnimationTimeoutId = setTimeout(this.reset, terminatingAnimationDuration);\n      this.setState({\n        percent: 100\n      });\n    }\n  }, {\n    key: \"isShown\",\n    value: function isShown() {\n      var percent = this.state.percent;\n      return percent > 0 && percent <= 100;\n    }\n  }, {\n    key: \"buildStyle\",\n    value: function buildStyle() {\n      var _this$state = this.state,\n          status = _this$state.status,\n          percent = _this$state.percent;\n      var _this$props = this.props,\n          className = _this$props.className,\n          customStyle = _this$props.style;\n      var animationDuration = status === 'stopping' ? TERMINATING_ANIMATION_DURATION : ANIMATION_DURATION;\n      var style = {\n        width: \"\".concat(percent, \"%\"),\n        transition: \"width \".concat(animationDuration, \"ms linear 0s\"),\n        msTransition: \"width \".concat(animationDuration, \"ms linear 0s\"),\n        WebkitTransition: \"width \".concat(animationDuration, \"ms linear 0s\"),\n        MozTransition: \"width \".concat(animationDuration, \"ms linear 0s\"),\n        OTransition: \"width \".concat(animationDuration, \"ms linear 0s\"),\n        willChange: 'width, opacity'\n      }; // Use default styling if there's no CSS class applied\n\n      if (!className) {\n        style.height = '3px';\n        style.backgroundColor = 'red';\n        style.position = 'absolute';\n      }\n\n      if (this.isShown()) {\n        style.opacity = '1';\n      } else {\n        style.opacity = '0';\n      }\n\n      return _objectSpread(_objectSpread({}, style), customStyle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var status = this.state.status;\n      var _this$props2 = this.props,\n          direction = _this$props2.direction,\n          className = _this$props2.className;\n\n      if (status === 'hidden') {\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null);\n      }\n\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: {\n          direction: direction\n        }\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: this.buildStyle(),\n        className: className\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: {\n          display: 'table',\n          clear: 'both'\n        }\n      }));\n    }\n  }]);\n\n  return LoadingBar;\n}(_react.Component);\n\nexports.LoadingBar = LoadingBar;\nLoadingBar.propTypes = {\n  className: _propTypes.string,\n  direction: _propTypes.string,\n  loading: _propTypes.number,\n  maxProgress: _propTypes.number,\n  progressIncrease: _propTypes.number,\n  scope: _propTypes.string,\n  showFastActions: _propTypes.bool,\n  style: _propTypes.object,\n  updateTime: _propTypes.number\n};\nLoadingBar.defaultProps = {\n  className: '',\n  direction: 'ltr',\n  loading: 0,\n  maxProgress: MAX_PROGRESS,\n  progressIncrease: PROGRESS_INCREASE,\n  scope: _loading_bar_ducks.DEFAULT_SCOPE,\n  showFastActions: false,\n  style: {},\n  updateTime: UPDATE_TIME\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    loading: state.loadingBar[ownProps.scope || _loading_bar_ducks.DEFAULT_SCOPE]\n  };\n};\n\n(0, _reactLifecyclesCompat.polyfill)(LoadingBar);\nvar ConnectedLoadingBar = (0, _reactRedux.connect)(mapStateToProps)(LoadingBar);\nexports[\"default\"] = ConnectedLoadingBar;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = loadingBarMiddleware;\n\nvar _loading_bar_ducks = require(\"./loading_bar_ducks\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar defaultTypeSuffixes = ['PENDING', 'FULFILLED', 'REJECTED'];\n\nfunction loadingBarMiddleware() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var promiseTypeSuffixes = config.promiseTypeSuffixes || defaultTypeSuffixes;\n  var scope = config.scope || _loading_bar_ducks.DEFAULT_SCOPE;\n  return function (_ref) {\n    var dispatch = _ref.dispatch;\n    return function (next) {\n      return function (action) {\n        if (action.type) {\n          var _promiseTypeSuffixes = _slicedToArray(promiseTypeSuffixes, 3),\n              PENDING = _promiseTypeSuffixes[0],\n              FULFILLED = _promiseTypeSuffixes[1],\n              REJECTED = _promiseTypeSuffixes[2];\n\n          var isPending = new RegExp(\"\".concat(PENDING, \"$\"), 'g');\n          var isFulfilled = new RegExp(\"\".concat(FULFILLED, \"$\"), 'g');\n          var isRejected = new RegExp(\"\".concat(REJECTED, \"$\"), 'g');\n          var actionScope = action.meta && action.meta.scope || action.scope || scope;\n\n          if (action.type.match(isPending)) {\n            dispatch((0, _loading_bar_ducks.showLoading)(actionScope));\n          } else if (action.type.match(isFulfilled) || action.type.match(isRejected)) {\n            dispatch((0, _loading_bar_ducks.hideLoading)(actionScope));\n          }\n        }\n\n        return next(action);\n      };\n    };\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _loading_bar = require(\"./loading_bar\");\n\nvar _loading_bar_ducks = require(\"./loading_bar_ducks\");\n\nvar mapImmutableStateToProps = function mapImmutableStateToProps(state, ownProps) {\n  return {\n    loading: state.get('loadingBar')[ownProps.scope || _loading_bar_ducks.DEFAULT_SCOPE]\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapImmutableStateToProps)(_loading_bar.LoadingBar);\n\nexports[\"default\"] = _default;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"LoadingBar\", {\n  enumerable: true,\n  get: function get() {\n    return _loading_bar.LoadingBar;\n  }\n});\nObject.defineProperty(exports, \"loadingBarMiddleware\", {\n  enumerable: true,\n  get: function get() {\n    return _loading_bar_middleware[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"DEFAULT_SCOPE\", {\n  enumerable: true,\n  get: function get() {\n    return _loading_bar_ducks.DEFAULT_SCOPE;\n  }\n});\nObject.defineProperty(exports, \"HIDE\", {\n  enumerable: true,\n  get: function get() {\n    return _loading_bar_ducks.HIDE;\n  }\n});\nObject.defineProperty(exports, \"hideLoading\", {\n  enumerable: true,\n  get: function get() {\n    return _loading_bar_ducks.hideLoading;\n  }\n});\nObject.defineProperty(exports, \"loadingBarReducer\", {\n  enumerable: true,\n  get: function get() {\n    return _loading_bar_ducks.loadingBarReducer;\n  }\n});\nObject.defineProperty(exports, \"RESET\", {\n  enumerable: true,\n  get: function get() {\n    return _loading_bar_ducks.RESET;\n  }\n});\nObject.defineProperty(exports, \"resetLoading\", {\n  enumerable: true,\n  get: function get() {\n    return _loading_bar_ducks.resetLoading;\n  }\n});\nObject.defineProperty(exports, \"SHOW\", {\n  enumerable: true,\n  get: function get() {\n    return _loading_bar_ducks.SHOW;\n  }\n});\nObject.defineProperty(exports, \"showLoading\", {\n  enumerable: true,\n  get: function get() {\n    return _loading_bar_ducks.showLoading;\n  }\n});\nObject.defineProperty(exports, \"ImmutableLoadingBar\", {\n  enumerable: true,\n  get: function get() {\n    return _immutable[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _loading_bar = _interopRequireWildcard(require(\"./loading_bar\"));\n\nvar _loading_bar_middleware = _interopRequireDefault(require(\"./loading_bar_middleware\"));\n\nvar _loading_bar_ducks = require(\"./loading_bar_ducks\");\n\nvar _immutable = _interopRequireDefault(require(\"./immutable\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar _default = _loading_bar[\"default\"];\nexports[\"default\"] = _default;"],
  "mappings": "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",
  "names": ["__export", "__toCommonJS", "React", "useReduxContext", "useSelector", "reactReduxForwardedRef", "wrapperProps", "subscription", "notifyNestedSubs", "useStore", "useDispatch", "_getRequireWildcardCache", "_typeof", "obj", "_setPrototypeOf", "o", "p", "_getPrototypeOf", "LoadingBar", "mapStateToProps", "mapImmutableStateToProps", "_typeof", "obj", "_getRequireWildcardCache"]
}
